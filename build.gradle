/**
	@updator: TeamDman
 	@changes:	- Updated forge version
 				- Changed Psi to maven dependency
 				- Bump version number
 */

buildscript {
	repositories {
		maven { url = 'https://files.minecraftforge.net/maven' }
		jcenter()
		mavenCentral()
	}
	dependencies {
		classpath 'net.minecraftforge.gradle:ForgeGradle:3.+'
	}
}


apply plugin: 'net.minecraftforge.gradle'
//Only edit below this line, the above code adds and enables the nessasary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'idea'

version = "8.0.2.0"
group= "landmaster.plustic" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "plustic"

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

minecraft {
	// The mappings can be changed at any time, and must be in the following format.
	// snapshot_YYYYMMDD   Snapshot are built nightly.
	// stable_#            Stables are built at the discretion of the MCP team.
	// Use non-default mappings at your own risk. they may not always work.
	// Simply re-run your setup task after changing the mappings to update your workspace.
	//mappings channel: 'snapshot', version: '20171003-1.12'
//	mappings channel: 'snapshot', version: '20180813-1.12'
	mappings channel: 'stable', version: '39-1.12'
//	mappings = "stable_39"
	// makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.

	accessTransformer = file('src/main/resources/META-INF/plustic_at.cfg')

	// Default run configurations.
	// These can be tweaked, removed, or duplicated as needed.
	runs {
		client {
			workingDirectory project.file('run')

			// Recommended logging data for a userdev environment
			property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

			// Recommended logging level for the console
			property 'forge.logging.console.level', 'debug'
		}

		server {

			// Recommended logging data for a userdev environment
			property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

			// Recommended logging level for the console
			property 'forge.logging.console.level', 'debug'
		}
	}
}

repositories {
	maven { url 'https://maven.blamejared.com' }
}


dependencies {
	minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2854'
	compile files("./libs/ActuallyAdditions-1.12.2-r149.jar")
	compile files("./libs/AoA3-3.1.2.b.jar")
	compile files("./libs/AutoRegLib-1.3-32.jar")
	compile files("./libs/Baubles-1.12-1.5.2.jar")
	compile files("./libs/Botania r1.9-346.jar")
	compile files("./libs/CraftTweaker2-1.12-4.1.20.574.jar")
//	runtimeOnly fg.deobf(group: "CraftTweaker2", name:"CraftTweaker2-MC1120-Main", version: "1.12-4.1.9.491")
	compileOnly fg.deobf(files("./libs/CraftTweaker2-1.12-4.1.20.574.jar"))
	compile files("./libs/Forgelin-1.8.4.jar")
	compile files("./libs/Hwyla-1.8.26-B41_1.12.2.jar")
	compile files("./libs/MTLib-3.0.6.jar")
	compile files("./libs/Mantle-1.12-1.3.3.55.jar")
	compile files("./libs/Psi-r1.1-78.1.jar")
	compile files("./libs/RedstoneFlux-1.12-2.1.1.1-universal.jar")
	compile files("./libs/SimplyJetpacks2-1.12.2-2.2.10.63.jar")
	compile files("./libs/TConstruct-1.12.2-2.13.0.183.jar")
	compile files("./libs/Tesla-1.12.2-1.0.63.jar")
	compile files("./libs/appliedenergistics2-rv6-stable-6.jar")
	compile files("./libs/astralsorcery-1.12.2-1.10.19.jar")
	compile files("./libs/conarm-1.12.2-1.2.0.2.jar")
	compile files("./libs/industrialforegoing-1.12.2-1.11.7-217-deobf.jar")
	compile files("./libs/jei_1.12.2-4.16.1.301.jar")
	compile files("./libs/modtweaker-4.0.15.jar")
	compile files("./libs/natura-1.12.2-4.3.2.42.jar")
	compile files("./libs/tesla-core-lib-1.12.2-1.0.17.jar")
}

import org.apache.tools.ant.filters.ReplaceTokens
task replaceVersion(type: Copy) {
	from 'src/meta/java'
	into "$buildDir/__generated_src"
	filter(ReplaceTokens, tokens: [
		'VERSION': project.version
	])
}

compileJava.source replaceVersion.outputs.files
compileJava.dependsOn replaceVersion

idea {
	module {
		sourceDirs += file("src/meta/java")
		sourceDirs += file("src/main/java")
		resourceDirs += file("src/main/resources")
	}
}

// Example configuration to allow publishing using the maven-publish task
// This is the preferred method to reobfuscate your jar file
jar.finalizedBy('reobfJar')
// However if you are in a multi-project build, dev time needs unobfed jar files, so you can delay the obfuscation until publishing by doing
//publish.dependsOn('reobfJar')

processResources {
	exclude '**/*.xcf'
	
	// this will ensure that this task is redone when the versions change.
	inputs.property "version", project.version
	inputs.property "mcversion", '20171003-1.12'
	
	// replace stuff in mcmod.info, nothing else
	from(sourceSets.main.resources.srcDirs) {
		include 'mcmod.info'
				
		// replace version and mcversion
		expand 'version':project.version, 'mcversion':'20171003-1.12'
	}
		
	// copy everything else, thats not the mcmod.info
	from(sourceSets.main.resources.srcDirs) {
		exclude 'mcmod.info'
	}
}

jar {
	manifest {
		attributes 'FMLAT': 'plustic_at.cfg'
	}
}
